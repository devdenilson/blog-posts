{"ast":null,"code":"import _classCallCheck from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/patrickferris/Documents/Projects/sequencer/src/Sequencer.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #4c4c4c 0%,#595959 12%,#666666 25%,#474747 39%,#2c2c2c 50%,#000000 51%,#111111 60%,#2b2b2b 76%,#1c1c1c 91%,#131313 100%);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Howl, Howler } from 'howler';\nimport Instrument from './Instrument';\nimport ControlPanel from './ControlPanel';\nimport BeatLine from './BeatLine';\nimport styled from 'styled-components';\nimport snare from './sounds/808-snare.wav';\nimport kick from './sounds/808-kick.wav';\nimport clap from './sounds/808-clap.wav';\nvar BackPanel = styled.div(_templateObject());\n\nvar Sequencer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sequencer, _Component);\n\n  function Sequencer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sequencer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sequencer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      instruments: [new Array(8).fill(false), new Array(8).fill(false), new Array(8).fill(false)],\n      instrumentSounds: [new Howl({\n        src: snare\n      }), new Howl({\n        src: kick\n      }), new Howl({\n        src: clap\n      })],\n      beatSequence: new Array(8).fill(false),\n      sequenceNumber: 0,\n      sequenceLength: 8,\n      intervalPeriod: 250,\n      intervalId: 1,\n      audioActivated: false\n    };\n\n    _this.timer = function () {\n      var _this$state = _this.state,\n          sequenceNumber = _this$state.sequenceNumber,\n          sequenceLength = _this$state.sequenceLength,\n          audioActivated = _this$state.audioActivated,\n          instruments = _this$state.instruments,\n          instrumentSounds = _this$state.instrumentSounds;\n      var newBeatSequence = new Array(sequenceLength).fill(false);\n      newBeatSequence[sequenceNumber] = true;\n\n      _this.setState({\n        sequenceNumber: (sequenceNumber + 1) % sequenceLength,\n        beatSequence: newBeatSequence\n      });\n\n      for (var i = 0; i < instruments.length; i++) {\n        if (instruments[i][sequenceNumber]) {\n          instrumentSounds[i].play();\n        }\n      }\n    };\n\n    _this.updateSequence = function (idx, jdx) {\n      var seq = _this.state.instruments[idx].map(function (val, kdx) {\n        if (jdx === kdx) {\n          return !_this.state.instruments[idx][jdx];\n        } else {\n          return _this.state.instruments[idx][kdx];\n        }\n      });\n\n      var inst = _this.state.instruments;\n      inst[idx] = seq;\n\n      _this.setState({\n        instruments: inst\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Sequencer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var intervalId = setInterval(this.timer, this.state.intervalPeriod);\n      this.setState({\n        intervalId: intervalId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(BackPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ControlPanel, {\n        ctx: Howler.ctx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(BeatLine, {\n        sequence: this.state.beatSequence,\n        currentBeat: this.state.sequenceNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), this.state.instruments.map(function (val, idx) {\n        return React.createElement(Instrument, {\n          instrument: _this2.state.instrumentSounds[idx],\n          key: idx,\n          sequence: _this2.state.instruments[idx],\n          onClick: function onClick(jdx) {\n            return _this2.updateSequence(idx, jdx);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Sequencer;\n}(Component);\n\nexport default Sequencer;","map":{"version":3,"sources":["/Users/patrickferris/Documents/Projects/sequencer/src/Sequencer.js"],"names":["React","Component","Howl","Howler","Instrument","ControlPanel","BeatLine","styled","snare","kick","clap","BackPanel","div","Sequencer","state","instruments","Array","fill","instrumentSounds","src","beatSequence","sequenceNumber","sequenceLength","intervalPeriod","intervalId","audioActivated","timer","newBeatSequence","setState","i","length","play","updateSequence","idx","jdx","seq","map","val","kdx","inst","setInterval","ctx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Howl, Howler} from 'howler';\nimport Instrument from './Instrument';\nimport ControlPanel from './ControlPanel';\nimport BeatLine from './BeatLine';\n\nimport styled from 'styled-components';\n\nimport snare from './sounds/808-snare.wav';\nimport kick from './sounds/808-kick.wav';\nimport clap from './sounds/808-clap.wav';\n\nconst BackPanel = styled.div`\n  background: linear-gradient(135deg, #4c4c4c 0%,#595959 12%,#666666 25%,#474747 39%,#2c2c2c 50%,#000000 51%,#111111 60%,#2b2b2b 76%,#1c1c1c 91%,#131313 100%);\n`;\n\nclass Sequencer extends Component {\n\n  state = {\n    instruments: [\n      new Array(8).fill(false),\n      new Array(8).fill(false),\n      new Array(8).fill(false)\n    ],\n    instrumentSounds: [\n      new Howl({\n        src: snare\n      }),\n      new Howl({\n        src: kick\n      }),\n      new Howl({\n        src: clap\n      })\n    ],\n    beatSequence: new Array(8).fill(false),\n    sequenceNumber: 0,\n    sequenceLength: 8,\n    intervalPeriod: 250,\n    intervalId: 1,\n    audioActivated: false\n  }\n\n  componentDidMount() {\n    let intervalId = setInterval(this.timer, this.state.intervalPeriod);\n    this.setState({\n      intervalId: intervalId\n    })\n  }\n\n  timer = () => {\n    let { sequenceNumber, sequenceLength, audioActivated, instruments, instrumentSounds} = this.state;\n\n    let newBeatSequence = new Array(sequenceLength).fill(false);\n    newBeatSequence[sequenceNumber] = true;\n\n    this.setState({\n      sequenceNumber: (sequenceNumber + 1) % sequenceLength,\n      beatSequence: newBeatSequence\n    });\n\n    for(let i = 0; i < instruments.length; i++) {\n      if(instruments[i][sequenceNumber]) {\n        instrumentSounds[i].play();\n      }\n    }\n  }\n\n  updateSequence = (idx, jdx) => {\n    let seq = this.state.instruments[idx].map((val, kdx) => {\n      if(jdx === kdx) {\n        return !this.state.instruments[idx][jdx];\n      } else {\n        return this.state.instruments[idx][kdx];\n      }\n    });\n\n    let inst = this.state.instruments;\n    inst[idx] = seq;\n\n    this.setState({\n      instruments:  inst\n    });\n  }\n\n  render() {\n    return (\n      <BackPanel>\n        <ControlPanel ctx={Howler.ctx}/>\n        <BeatLine sequence={this.state.beatSequence} currentBeat={this.state.sequenceNumber} />\n        {this.state.instruments.map((val, idx) => {\n          return (\n            <Instrument instrument={this.state.instrumentSounds[idx]} key={idx} sequence={this.state.instruments[idx]} onClick={(jdx) => this.updateSequence(idx, jdx)}/>\n          )\n        })}\n      </BackPanel>\n    );\n  }\n}\n\nexport default Sequencer;\n"]},"metadata":{},"sourceType":"module"}