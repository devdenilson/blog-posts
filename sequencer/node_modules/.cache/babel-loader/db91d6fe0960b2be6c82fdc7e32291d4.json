{"ast":null,"code":"import _classCallCheck from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickferris/Documents/Projects/sequencer/src/Sequencer.js\";\nimport React, { Component } from 'react';\nimport { asset, NativeModules } from 'react-360';\nimport Instrument from './Instrument';\n\nvar Sequencer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sequencer, _Component);\n\n  function Sequencer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sequencer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sequencer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      instruments: [new Array(8).fill(false), new Array(8).fill(false)],\n      sequenceNumber: 0,\n      sequenceLength: 8,\n      intervalPeriod: 500,\n      intervalId: 1\n    };\n\n    _this.timer = function () {\n      var _this$state = _this.state,\n          sequenceNumber = _this$state.sequenceNumber,\n          sequenceLength = _this$state.sequenceLength;\n    };\n\n    _this.updateSequence = function (idx, jdx) {\n      var seq = _this.state.instruments[idx].map(function (val, kdx) {\n        if (jdx === kdx) {\n          return !_this.state.instruments[idx][jdx];\n        } else {\n          return _this.state.instruments[idx][kdx];\n        }\n      });\n\n      var inst = _this.state.instruments;\n      inst[idx] = seq;\n\n      _this.setState({\n        instruments: inst\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Sequencer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var intervalId = setInterval(this.timer, 500);\n      this.setState({\n        intervalId: intervalId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.instruments.map(function (val, idx) {\n        return React.createElement(Instrument, {\n          key: idx,\n          sequence: _this2.state.instruments[idx],\n          onClick: function onClick(jdx) {\n            return _this2.updateSequence(idx, jdx);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Sequencer;\n}(Component);\n\nexport default Sequencer;","map":{"version":3,"sources":["/Users/patrickferris/Documents/Projects/sequencer/src/Sequencer.js"],"names":["React","Component","asset","NativeModules","Instrument","Sequencer","state","instruments","Array","fill","sequenceNumber","sequenceLength","intervalPeriod","intervalId","timer","updateSequence","idx","jdx","seq","map","val","kdx","inst","setState","setInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,WAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,S;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE,CACX,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,KAAlB,CADW,EAEX,IAAID,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,KAAlB,CAFW,CADP;AAKNC,MAAAA,cAAc,EAAE,CALV;AAMNC,MAAAA,cAAc,EAAE,CANV;AAONC,MAAAA,cAAc,EAAE,GAPV;AAQNC,MAAAA,UAAU,EAAE;AARN,K;;UAkBRC,K,GAAQ,YAAM;AAAA,wBAC6B,MAAKR,KADlC;AAAA,UACNI,cADM,eACNA,cADM;AAAA,UACUC,cADV,eACUA,cADV;AAIb,K;;UAEDI,c,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,UAAIC,GAAG,GAAG,MAAKZ,KAAL,CAAWC,WAAX,CAAuBS,GAAvB,EAA4BG,GAA5B,CAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtD,YAAGJ,GAAG,KAAKI,GAAX,EAAgB;AACd,iBAAO,CAAC,MAAKf,KAAL,CAAWC,WAAX,CAAuBS,GAAvB,EAA4BC,GAA5B,CAAR;AACD,SAFD,MAEO;AACL,iBAAO,MAAKX,KAAL,CAAWC,WAAX,CAAuBS,GAAvB,EAA4BK,GAA5B,CAAP;AACD;AACF,OANS,CAAV;;AAQA,UAAIC,IAAI,GAAG,MAAKhB,KAAL,CAAWC,WAAtB;AACAe,MAAAA,IAAI,CAACN,GAAD,CAAJ,GAAYE,GAAZ;;AAEA,YAAKK,QAAL,CAAc;AACZhB,QAAAA,WAAW,EAAGe;AADF,OAAd;AAGD,K;;;;;;;wCA5BmB;AAClB,UAAIT,UAAU,GAAGW,WAAW,CAAC,KAAKV,KAAN,EAAa,GAAb,CAA5B;AACA,WAAKS,QAAL,CAAc;AACZV,QAAAA,UAAU,EAAEA;AADA,OAAd;AAGD;;;6BAyBQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWC,WAAX,CAAuBY,GAAvB,CAA2B,UAACC,GAAD,EAAMJ,GAAN,EAAc;AACxC,eACE,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEA,GAAjB;AAAsB,UAAA,QAAQ,EAAE,MAAI,CAACV,KAAL,CAAWC,WAAX,CAAuBS,GAAvB,CAAhC;AAA6D,UAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,mBAAS,MAAI,CAACF,cAAL,CAAoBC,GAApB,EAAyBC,GAAzB,CAAT;AAAA,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJA,CADH,CADF;AASD;;;;EArDqBhB,S;;AAwDxB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { asset, NativeModules } from 'react-360';\nimport Instrument from './Instrument';\n\nclass Sequencer extends Component {\n\n  state = {\n    instruments: [\n      new Array(8).fill(false),\n      new Array(8).fill(false)\n    ],\n    sequenceNumber: 0,\n    sequenceLength: 8,\n    intervalPeriod: 500,\n    intervalId: 1\n  }\n\n  componentDidMount() {\n    let intervalId = setInterval(this.timer, 500);\n    this.setState({\n      intervalId: intervalId\n    })\n  }\n\n  timer = () => {\n    let { sequenceNumber, sequenceLength } = this.state;\n\n\n  }\n\n  updateSequence = (idx, jdx) => {\n    let seq = this.state.instruments[idx].map((val, kdx) => {\n      if(jdx === kdx) {\n        return !this.state.instruments[idx][jdx];\n      } else {\n        return this.state.instruments[idx][kdx];\n      }\n    });\n\n    let inst = this.state.instruments;\n    inst[idx] = seq;\n\n    this.setState({\n      instruments:  inst\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.instruments.map((val, idx) => {\n          return (\n            <Instrument key={idx} sequence={this.state.instruments[idx]} onClick={(jdx) => this.updateSequence(idx, jdx)}/>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Sequencer;\n"]},"metadata":{},"sourceType":"module"}