{"ast":null,"code":"import _classCallCheck from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickferris/Documents/Projects/sequencer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickferris/Documents/Projects/sequencer/src/Sequencer.js\";\nimport React, { Component } from 'react';\nimport Instrument from './Instrument';\n\nvar Sequencer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sequencer, _Component);\n\n  function Sequencer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sequencer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sequencer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      instruments: [true],\n      sequenceNumber: 0,\n      sequenceLength: 8,\n      intervalPeriod: 500,\n      intervalId: 1\n    };\n    return _this;\n  }\n\n  _createClass(Sequencer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var intervalId = setInterval(this.timer, 500);\n      this.setState({\n        intervalId: intervalId\n      });\n    }\n  }, {\n    key: \"timer\",\n    value: function timer() {\n      console.log(this.state);\n      this.setState({\n        sequenceNumber: (this.state.sequenceNumber + 1) % this.state.sequenceLength\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.state.instruments.map(function (val, idx) {\n        return React.createElement(Instrument, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Sequencer;\n}(Component);\n\nexport default Sequencer;","map":{"version":3,"sources":["/Users/patrickferris/Documents/Projects/sequencer/src/Sequencer.js"],"names":["React","Component","Instrument","Sequencer","state","instruments","sequenceNumber","sequenceLength","intervalPeriod","intervalId","setInterval","timer","setState","console","log","map","val","idx"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,S;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE,CAAC,IAAD,CADP;AAENC,MAAAA,cAAc,EAAE,CAFV;AAGNC,MAAAA,cAAc,EAAE,CAHV;AAINC,MAAAA,cAAc,EAAE,GAJV;AAKNC,MAAAA,UAAU,EAAE;AALN,K;;;;;;wCAQY;AAClB,UAAIA,UAAU,GAAGC,WAAW,CAAC,KAAKC,KAAN,EAAa,GAAb,CAA5B;AACA,WAAKC,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEA;AADA,OAAd;AAGD;;;4BAEO;AACNI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,WAAKQ,QAAL,CAAc;AACZN,QAAAA,cAAc,EAAE,CAAC,KAAKF,KAAL,CAAWE,cAAX,GAA4B,CAA7B,IAAkC,KAAKF,KAAL,CAAWG;AADjD,OAAd;AAGD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,WAAX,CAAuBU,GAAvB,CAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxC,eACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJA,CADH,CADF;AASD;;;;EAlCqBhB,S;;AAqCxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Instrument from './Instrument';\n\nclass Sequencer extends Component {\n\n  state = {\n    instruments: [true],\n    sequenceNumber: 0,\n    sequenceLength: 8,\n    intervalPeriod: 500,\n    intervalId: 1\n  }\n\n  componentDidMount() {\n    let intervalId = setInterval(this.timer, 500);\n    this.setState({\n      intervalId: intervalId\n    })\n  }\n\n  timer() {\n    console.log(this.state);\n    this.setState({\n      sequenceNumber: (this.state.sequenceNumber + 1) % this.state.sequenceLength\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.instruments.map((val, idx) => {\n          return (\n            <Instrument />\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Sequencer;\n"]},"metadata":{},"sourceType":"module"}